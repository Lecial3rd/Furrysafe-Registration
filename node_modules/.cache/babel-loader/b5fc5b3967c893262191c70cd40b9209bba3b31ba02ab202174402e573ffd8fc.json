{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-73811437\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Upload Image\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"field\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\"\n}, \"Select Image\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"control\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"field\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"control\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button is-primary\",\n  type: \"submit\"\n}, \"Upload\")])], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Gallery\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"gallery\"\n};\nconst _hoisted_8 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.uploadImage && $options.uploadImage(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    class: \"input\",\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    accept: \"image/*\",\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */)])]), _hoisted_5], 32 /* NEED_HYDRATION */), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, image => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: image.id,\n      class: \"image-item\"\n    }, [_createElementVNode(\"img\", {\n      src: image.url,\n      alt: image.name\n    }, null, 8 /* PROPS */, _hoisted_8)]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.message ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"notification\", $data.messageType])\n  }, _toDisplayString($data.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","class","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","uploadImage","_hoisted_2","_hoisted_3","_hoisted_4","onChange","handleFileUpload","accept","required","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","$data","images","image","key","id","src","url","alt","name","_hoisted_8","message","_normalizeClass","messageType","_createCommentVNode"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Upload Image</h1>\r\n    <form @submit.prevent=\"uploadImage\">\r\n      <div class=\"field\">\r\n        <label class=\"label\">Select Image</label>\r\n        <div class=\"control\">\r\n          <input class=\"input\" type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <button class=\"button is-primary\" type=\"submit\">Upload</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <h2>Gallery</h2>\r\n    <div class=\"gallery\">\r\n      <div v-for=\"image in images\" :key=\"image.id\" class=\"image-item\">\r\n        <img :src=\"image.url\" :alt=\"image.name\">\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"message\" class=\"notification\" :class=\"messageType\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { supabase } from '../supabaseClient'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: null,\r\n      images: [],\r\n      message: '',\r\n      messageType: ''\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    async uploadImage() {\r\n      if (!this.file) return;\r\n\r\n      const { data, error } = await supabase.storage\r\n        .from('images')\r\n        .upload(`public/${this.file.name}`, this.file);\r\n\r\n      if (error) {\r\n        this.message = 'Image upload failed: ' + error.message;\r\n        this.messageType = 'is-danger';\r\n      } else {\r\n        this.message = 'Image uploaded successfully!';\r\n        this.messageType = 'is-success';\r\n        this.fetchImages(); // Refresh the gallery after upload\r\n      }\r\n    },\r\n    async fetchImages() {\r\n      const { data, error } = await supabase\r\n        .storage\r\n        .from('images')\r\n        .list('public', { limit: 100 });\r\n\r\n      if (error) {\r\n        console.error('Error fetching images:', error);\r\n      } else {\r\n        this.images = data.map((file) => ({\r\n          name: file.name,\r\n          url: `${supabase.storage.getPublicUrl('images').publicUrl}/public/${file.name}`\r\n        }));\r\n      }\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.fetchImages();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.gallery {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.image-item {\r\n  width: 150px;\r\n  height: 150px;\r\n  overflow: hidden;\r\n}\r\n\r\n.image-item img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAqB,YAAjB,cAAY;;EAETC,KAAK,EAAC;AAAO;gEAChBD,mBAAA,CAAyC;EAAlCC,KAAK,EAAC;AAAO,GAAC,cAAY;;EAC5BA,KAAK,EAAC;AAAS;gEAItBD,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAO,I,aAChBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAS,I,aAClBD,mBAAA,CAA+D;EAAvDC,KAAK,EAAC,mBAAmB;EAACC,IAAI,EAAC;GAAS,QAAM,E;gEAK5DF,mBAAA,CAAgB,YAAZ,SAAO;;EACNC,KAAK,EAAC;AAAS;mBAlBxB;;uBACEE,mBAAA,CA0BM,cAzBJC,UAAqB,EACrBJ,mBAAA,CAYO;IAZAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCR,mBAAA,CAKM,OALNW,UAKM,GAJJC,UAAyC,EACzCZ,mBAAA,CAEM,OAFNa,UAEM,GADJb,mBAAA,CAAsF;IAA/EC,KAAK,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;IAAEY,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAM,gBAAA,IAAAN,QAAA,CAAAM,gBAAA,IAAAP,IAAA,CAAgB;IAAEQ,MAAM,EAAC,SAAS;IAACC,QAAQ,EAAR;yCAGjFC,UAIM,C,4BAGRC,UAAgB,EAChBnB,mBAAA,CAIM,OAJNoB,UAIM,I,kBAHJjB,mBAAA,CAEMkB,SAAA,QArBZC,WAAA,CAmB2BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAjBtB,mBAAA,CAEM;MAFwBuB,GAAG,EAAED,KAAK,CAACE,EAAE;MAAE1B,KAAK,EAAC;QACjDD,mBAAA,CAAwC;MAAlC4B,GAAG,EAAEH,KAAK,CAACI,GAAG;MAAGC,GAAG,EAAEL,KAAK,CAACM;4BApB1CC,UAAA,E;oCAwBeT,KAAA,CAAAU,OAAO,I,cAAlB9B,mBAAA,CAEM;IA1BVuB,GAAA;IAwBwBzB,KAAK,EAxB7BiC,eAAA,EAwB8B,cAAc,EAASX,KAAA,CAAAY,WAAW;sBACvDZ,KAAA,CAAAU,OAAO,2BAzBhBG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}