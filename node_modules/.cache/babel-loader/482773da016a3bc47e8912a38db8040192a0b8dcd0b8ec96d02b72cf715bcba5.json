{"ast":null,"code":"import { supabase } from '../supabaseClient.js';\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      message: '',\n      messageType: '',\n      uploadedImageUrl: ''\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async uploadImage() {\n      if (!this.selectedFile) {\n        this.message = 'Please select an image file.';\n        this.messageType = 'is-danger';\n        return;\n      }\n      const filePath = `public/${Date.now()}_${this.selectedFile.name}`;\n      const {\n        data,\n        error\n      } = await supabase.storage.from('images').upload(filePath, this.selectedFile);\n      if (error) {\n        this.message = 'Image upload failed: ' + error.message;\n        this.messageType = 'is-danger';\n        return;\n      }\n      const {\n        data: publicData\n      } = supabase.storage.from('images').getPublicUrl(filePath);\n      this.uploadedImageUrl = publicData.publicUrl;\n      this.message = 'Image uploaded successfully!';\n      this.messageType = 'is-success';\n    }\n  }\n};","map":{"version":3,"names":["supabase","data","selectedFile","message","messageType","uploadedImageUrl","methods","onFileChange","event","target","files","uploadImage","filePath","Date","now","name","error","storage","from","upload","publicData","getPublicUrl","publicUrl"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Image Upload</h1>\r\n\r\n    <form @submit.prevent=\"uploadImage\">\r\n      <div class=\"field\">\r\n        <label class=\"label\">Select Image</label>\r\n        <div class=\"control\">\r\n          <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <button class=\"button is-primary\" type=\"submit\">Upload Image</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div v-if=\"message\" class=\"notification\" :class=\"messageType\">\r\n      {{ message }}\r\n    </div>\r\n\r\n    <div v-if=\"uploadedImageUrl\">\r\n      <h2 class=\"subtitle\">Uploaded Image:</h2>\r\n      <img :src=\"uploadedImageUrl\" alt=\"Uploaded image\" class=\"uploaded-image\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { supabase } from '../supabaseClient.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      message: '',\r\n      messageType: '',\r\n      uploadedImageUrl: ''\r\n    };\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async uploadImage() {\r\n      if (!this.selectedFile) {\r\n        this.message = 'Please select an image file.';\r\n        this.messageType = 'is-danger';\r\n        return;\r\n      }\r\n\r\n      const filePath = `public/${Date.now()}_${this.selectedFile.name}`;\r\n      const { data, error } = await supabase.storage\r\n        .from('images')\r\n        .upload(filePath, this.selectedFile);\r\n\r\n      if (error) {\r\n        this.message = 'Image upload failed: ' + error.message;\r\n        this.messageType = 'is-danger';\r\n        return;\r\n      }\r\n\r\n      const { data: publicData } = supabase\r\n        .storage\r\n        .from('images')\r\n        .getPublicUrl(filePath);\r\n\r\n      this.uploadedImageUrl = publicData.publicUrl;\r\n      this.message = 'Image uploaded successfully!';\r\n      this.messageType = 'is-success';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 2em;\r\n}\r\n.uploaded-image {\r\n  max-width: 100%;\r\n  margin-top: 20px;\r\n}\r\n.notification {\r\n  margin-top: 1em;\r\n}\r\n.is-success {\r\n  background-color: #48c774;\r\n  color: white;\r\n}\r\n.is-danger {\r\n  background-color: #f14668;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"AA8BA,SAASA,QAAO,QAAS,sBAAqB;AAE9C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACN,YAAW,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACT,YAAY,EAAE;QACtB,IAAI,CAACC,OAAM,GAAI,8BAA8B;QAC7C,IAAI,CAACC,WAAU,GAAI,WAAW;QAC9B;MACF;MAEA,MAAMQ,QAAO,GAAI,UAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI,IAAI,CAACZ,YAAY,CAACa,IAAI,EAAE;MACjE,MAAM;QAAEd,IAAI;QAAEe;MAAM,IAAI,MAAMhB,QAAQ,CAACiB,OAAM,CAC1CC,IAAI,CAAC,QAAQ,EACbC,MAAM,CAACP,QAAQ,EAAE,IAAI,CAACV,YAAY,CAAC;MAEtC,IAAIc,KAAK,EAAE;QACT,IAAI,CAACb,OAAM,GAAI,uBAAsB,GAAIa,KAAK,CAACb,OAAO;QACtD,IAAI,CAACC,WAAU,GAAI,WAAW;QAC9B;MACF;MAEA,MAAM;QAAEH,IAAI,EAAEmB;MAAW,IAAIpB,QAAO,CACjCiB,OAAM,CACNC,IAAI,CAAC,QAAQ,EACbG,YAAY,CAACT,QAAQ,CAAC;MAEzB,IAAI,CAACP,gBAAe,GAAIe,UAAU,CAACE,SAAS;MAC5C,IAAI,CAACnB,OAAM,GAAI,8BAA8B;MAC7C,IAAI,CAACC,WAAU,GAAI,YAAY;IACjC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}