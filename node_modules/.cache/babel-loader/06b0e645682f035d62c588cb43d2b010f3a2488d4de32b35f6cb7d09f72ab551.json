{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3ab89790\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Register User\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_registration = _resolveComponent(\"user-registration\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_user_registration, {\n    onUserRegistered: $options.handleUserRegistered\n  }, null, 8 /* PROPS */, [\"onUserRegistered\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_user_registration","onUserRegistered","$options","handleUserRegistered"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\frontend\\src\\views\\RegistrationView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Register User</h1>\r\n      <user-registration @user-registered=\"handleUserRegistered\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import UserRegistration from '../components/userRegistration.vue'\r\n  \r\n  export default {\r\n    components: {\r\n      UserRegistration\r\n    },\r\n    methods: {\r\n      handleUserRegistered(user) {\r\n        console.log('User registered:', user)\r\n        // You can add any additional logic here after user registration\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add any styles specific to the registration view here */\r\n  </style>\r\n  "],"mappings":";;gEAEMA,mBAAA,CAAsB,YAAlB,eAAa;;;uBADnBC,mBAAA,CAGM,cAFJC,UAAsB,EACtBC,YAAA,CAA6DC,4BAAA;IAAzCC,gBAAe,EAAEC,QAAA,CAAAC;EAAoB,8C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}