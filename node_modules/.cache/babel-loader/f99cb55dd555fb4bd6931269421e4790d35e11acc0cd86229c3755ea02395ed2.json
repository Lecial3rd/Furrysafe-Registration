{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-73811437\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"image-upload\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Image Upload\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Your Images\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"images\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" File Input \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/png, image/jpeg\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" Upload Button \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadImage && $options.uploadImage(...args)),\n    disabled: !$data.selectedFile\n  }, \"Upload/Save Image\", 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" Notifications \"), $data.uploadStatus ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass($data.uploadStatusClass)\n  }, _toDisplayString($data.uploadStatusMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createCommentVNode(\" Display Uploaded Images \"), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, image => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: image.name,\n      class: \"image-card\"\n    }, [_createElementVNode(\"img\", {\n      src: $data.cdnUrl + image.name,\n      alt: \"Uploaded Image\"\n    }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteImage(image.name)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","type","ref","onChange","_cache","args","$options","onFileChange","accept","onClick","uploadImage","disabled","$data","selectedFile","_hoisted_3","uploadStatus","key","_normalizeClass","uploadStatusClass","uploadStatusMessage","_hoisted_4","_hoisted_5","_Fragment","_renderList","images","image","name","src","cdnUrl","alt","_hoisted_6","$event","deleteImage","_hoisted_7"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-upload\">\r\n    <h1>Image Upload</h1>\r\n\r\n    <!-- File Input -->\r\n    <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" accept=\"image/png, image/jpeg\" />\r\n\r\n    <!-- Upload Button -->\r\n    <button @click=\"uploadImage\" :disabled=\"!selectedFile\">Upload/Save Image</button>\r\n\r\n    <!-- Notifications -->\r\n    <p v-if=\"uploadStatus\" :class=\"uploadStatusClass\">{{ uploadStatusMessage }}</p>\r\n\r\n    <h3>Your Images</h3>\r\n    <!-- Display Uploaded Images -->\r\n    <div class=\"images\">\r\n      <div v-for=\"image in images\" :key=\"image.name\" class=\"image-card\">\r\n        <img :src=\"cdnUrl + image.name\" alt=\"Uploaded Image\" />\r\n        <button @click=\"deleteImage(image.name)\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { supabase } from '../supabaseClient';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      images: [],\r\n      cdnUrl: 'https://lfcvjlhlhbpvzhqodkny.supabase.co/storage/v1/object/public/images/',\r\n      uploadStatus: false,\r\n      uploadStatusClass: '',\r\n      uploadStatusMessage: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getImages();\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async getImages() {\r\n      const { data, error } = await supabase.storage.from('images').list('', {\r\n        limit: 100,\r\n        offset: 0,\r\n        sortBy: { column: 'name', order: 'asc' },\r\n      });\r\n\r\n      if (data) {\r\n        this.images = data;\r\n      } else {\r\n        console.log('Error loading images', error);\r\n      }\r\n    },\r\n    async uploadImage() {\r\n      if (!this.selectedFile) return;\r\n\r\n      const filePath = uuidv4() + '/' + this.selectedFile.name;\r\n\r\n      const { data, error } = await supabase.storage\r\n        .from('images')\r\n        .upload(filePath, this.selectedFile);\r\n\r\n      if (data) {\r\n        this.uploadStatus = true;\r\n        this.uploadStatusClass = 'success';\r\n        this.uploadStatusMessage = 'Image uploaded successfully!';\r\n        this.getImages(); // Refresh image list after upload\r\n        this.$refs.fileInput.value = null; // Reset file input\r\n        this.selectedFile = null;\r\n      } else {\r\n        this.uploadStatus = true;\r\n        this.uploadStatusClass = 'error';\r\n        this.uploadStatusMessage = `Error uploading image: ${error.message}`;\r\n        console.log('Error uploading image', error);\r\n      }\r\n    },\r\n    async deleteImage(imageName) {\r\n      const { error } = await supabase.storage.from('images').remove([imageName]);\r\n\r\n      if (error) {\r\n        console.log('Error deleting image', error);\r\n      } else {\r\n        this.getImages();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-upload {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.images {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n.image-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n.image-card img {\r\n  max-width: 100%;\r\n}\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n.success {\r\n  color: green;\r\n}\r\n.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAAqB,YAAjB,cAAY;mBAFpB;gEAaIA,mBAAA,CAAoB,YAAhB,aAAW;;EAEVD,KAAK,EAAC;AAAQ;mBAfvB;mBAAA;;uBACEE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAqB,EAErBC,mBAAA,gBAAmB,EACnBJ,mBAAA,CAA2F;IAApFK,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,WAAW;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;kDAEjER,mBAAA,mBAAsB,EACtBJ,mBAAA,CAAiF;IAAxEa,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;IAAGM,QAAQ,GAAGC,KAAA,CAAAC;KAAc,mBAAiB,iBAR5EC,UAAA,GAUId,mBAAA,mBAAsB,EACbY,KAAA,CAAAG,YAAY,I,cAArBlB,mBAAA,CAA+E;IAXnFmB,GAAA;IAW4BrB,KAAK,EAXjCsB,eAAA,CAWmCL,KAAA,CAAAM,iBAAiB;sBAAKN,KAAA,CAAAO,mBAAmB,2BAX5EnB,mBAAA,gBAaIoB,UAAoB,EACpBpB,mBAAA,6BAAgC,EAChCJ,mBAAA,CAKM,OALNyB,UAKM,I,kBAJJxB,mBAAA,CAGMyB,SAAA,QAnBZC,WAAA,CAgB2BX,KAAA,CAAAY,MAAM,EAAfC,KAAK;yBAAjB5B,mBAAA,CAGM;MAHwBmB,GAAG,EAAES,KAAK,CAACC,IAAI;MAAE/B,KAAK,EAAC;QACnDC,mBAAA,CAAuD;MAAjD+B,GAAG,EAAEf,KAAA,CAAAgB,MAAM,GAAGH,KAAK,CAACC,IAAI;MAAEG,GAAG,EAAC;4BAjB5CC,UAAA,GAkBQlC,mBAAA,CAAwD;MAA/Ca,OAAK,EAAAsB,MAAA,IAAEzB,QAAA,CAAA0B,WAAW,CAACP,KAAK,CAACC,IAAI;OAAG,QAAM,iBAlBvDO,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}