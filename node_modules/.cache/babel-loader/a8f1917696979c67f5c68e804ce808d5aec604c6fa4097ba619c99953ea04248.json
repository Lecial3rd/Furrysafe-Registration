{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-73811437\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Upload Image\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"field\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"label\"\n}, \"Select Image\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"control\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"field\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"control\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button is-primary\",\n  type: \"submit\"\n}, \"Upload\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.uploadImage && $options.uploadImage(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */)])]), _hoisted_5], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"notification\", $data.messageType])\n  }, _toDisplayString($data.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","class","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","uploadImage","_hoisted_2","_hoisted_3","_hoisted_4","onChange","handleFileUpload","required","_hoisted_5","$data","message","key","_normalizeClass","messageType","_createCommentVNode"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Upload Image</h1>\r\n    <form @submit.prevent=\"uploadImage\">\r\n      <div class=\"field\">\r\n        <label class=\"label\">Select Image</label>\r\n        <div class=\"control\">\r\n          <input type=\"file\" @change=\"handleFileUpload\" required />\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <button class=\"button is-primary\" type=\"submit\">Upload</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div v-if=\"message\" class=\"notification\" :class=\"messageType\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = 'https://your-supabase-url.supabase.co'\r\nconst supabaseKey = 'your-anon-key'\r\nconst supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: null,\r\n      message: '',\r\n      messageType: ''\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0]\r\n    },\r\n    async uploadImage() {\r\n      if (!this.file) {\r\n        this.message = 'Please select an image to upload.'\r\n        this.messageType = 'is-danger'\r\n        return\r\n      }\r\n\r\n      try {\r\n        // Upload the image to Supabase Storage\r\n        const { data, error } = await supabase\r\n          .storage\r\n          .from('your-bucket-name')\r\n          .upload(`public/${this.file.name}`, this.file)\r\n\r\n        if (error) throw error\r\n\r\n        // Get the public URL for the uploaded image\r\n        const { publicURL } = supabase\r\n          .storage\r\n          .from('your-bucket-name')\r\n          .getPublicUrl(`public/${this.file.name}`)\r\n\r\n        // Insert the image URL into the tbl_images table\r\n        const { error: insertError } = await supabase\r\n          .from('tbl_images')\r\n          .insert([{ image_url: publicURL }])\r\n\r\n        if (insertError) throw insertError\r\n\r\n        this.message = 'Image uploaded successfully!'\r\n        this.messageType = 'is-success'\r\n      } catch (error) {\r\n        this.message = `Image upload failed: ${error.message}`\r\n        this.messageType = 'is-danger'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification {\r\n  margin-top: 1em;\r\n}\r\n.is-success {\r\n  background-color: #48c774;\r\n  color: white;\r\n}\r\n.is-danger {\r\n  background-color: #f14668;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAqB,YAAjB,cAAY;;EAETC,KAAK,EAAC;AAAO;gEAChBD,mBAAA,CAAyC;EAAlCC,KAAK,EAAC;AAAO,GAAC,cAAY;;EAC5BA,KAAK,EAAC;AAAS;gEAItBD,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAO,I,aAChBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAS,I,aAClBD,mBAAA,CAA+D;EAAvDC,KAAK,EAAC,mBAAmB;EAACC,IAAI,EAAC;GAAS,QAAM,E;;uBAX9DC,mBAAA,CAmBM,cAlBJC,UAAqB,EACrBJ,mBAAA,CAYO;IAZAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCR,mBAAA,CAKM,OALNW,UAKM,GAJJC,UAAyC,EACzCZ,mBAAA,CAEM,OAFNa,UAEM,GADJb,mBAAA,CAAyD;IAAlDE,IAAI,EAAC,MAAM;IAAEY,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAM,gBAAA,IAAAN,QAAA,CAAAM,gBAAA,IAAAP,IAAA,CAAgB;IAAEQ,QAAQ,EAAR;yCAGlDC,UAIM,C,4BAGGC,KAAA,CAAAC,OAAO,I,cAAlBhB,mBAAA,CAEM;IAnBViB,GAAA;IAiBwBnB,KAAK,EAjB7BoB,eAAA,EAiB8B,cAAc,EAASH,KAAA,CAAAI,WAAW;sBACvDJ,KAAA,CAAAC,OAAO,2BAlBhBI,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}