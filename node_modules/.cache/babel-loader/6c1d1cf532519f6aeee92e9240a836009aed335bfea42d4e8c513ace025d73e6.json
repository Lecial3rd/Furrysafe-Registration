{"ast":null,"code":"import L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Import the custom pin image\nimport customPin from '@/assets/custom-pin.png';\nexport default {\n  name: 'MapWithPin',\n  data() {\n    return {\n      map: null,\n      marker: null,\n      customIcon: null\n    };\n  },\n  mounted() {\n    this.initializeMap();\n  },\n  methods: {\n    initializeMap() {\n      // Initialize the map and set its view\n      this.map = L.map('map').setView([10.3157, 123.8854], 13); // Cebu City coordinates\n\n      // Add the tile layer (the map itself)\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n        attribution: '© OpenStreetMap'\n      }).addTo(this.map);\n\n      // Set up the custom icon\n      this.customIcon = L.icon({\n        iconUrl: customPin,\n        // Custom pin image\n        iconSize: [38, 38],\n        // Size of the icon\n        iconAnchor: [19, 38],\n        // Anchor point of the icon\n        popupAnchor: [0, -38] // Position of the popup relative to the icon\n      });\n\n      // Add a click event to place a marker\n      this.map.on('click', this.addMarker);\n    },\n    addMarker(e) {\n      // If there's an existing marker, remove it\n      if (this.marker) {\n        this.map.removeLayer(this.marker);\n      }\n\n      // Add a new marker with the custom icon\n      this.marker = L.marker([e.latlng.lat, e.latlng.lng], {\n        icon: this.customIcon\n      }).addTo(this.map);\n\n      // Optionally, show the coordinates in a popup\n      this.marker.bindPopup(`Coordinates: ${e.latlng.lat}, ${e.latlng.lng}`).openPopup();\n    }\n  }\n};","map":{"version":3,"names":["L","customPin","name","data","map","marker","customIcon","mounted","initializeMap","methods","setView","tileLayer","maxZoom","attribution","addTo","icon","iconUrl","iconSize","iconAnchor","popupAnchor","on","addMarker","e","removeLayer","latlng","lat","lng","bindPopup","openPopup"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\frontend\\src\\components\\MapWithPin.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\" :style=\"{ height: '500px', width: '100%' }\"></div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Import the custom pin image\r\nimport customPin from '@/assets/custom-pin.png';\r\n\r\nexport default {\r\n  name: 'MapWithPin',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      marker: null,\r\n      customIcon: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initializeMap();\r\n  },\r\n  methods: {\r\n    initializeMap() {\r\n      // Initialize the map and set its view\r\n      this.map = L.map('map').setView([10.3157, 123.8854], 13); // Cebu City coordinates\r\n\r\n      // Add the tile layer (the map itself)\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        maxZoom: 19,\r\n        attribution: '© OpenStreetMap'\r\n      }).addTo(this.map);\r\n\r\n      // Set up the custom icon\r\n      this.customIcon = L.icon({\r\n        iconUrl: customPin, // Custom pin image\r\n        iconSize: [38, 38], // Size of the icon\r\n        iconAnchor: [19, 38], // Anchor point of the icon\r\n        popupAnchor: [0, -38], // Position of the popup relative to the icon\r\n      });\r\n\r\n      // Add a click event to place a marker\r\n      this.map.on('click', this.addMarker);\r\n    },\r\n    addMarker(e) {\r\n      // If there's an existing marker, remove it\r\n      if (this.marker) {\r\n        this.map.removeLayer(this.marker);\r\n      }\r\n\r\n      // Add a new marker with the custom icon\r\n      this.marker = L.marker([e.latlng.lat, e.latlng.lng], { icon: this.customIcon }).addTo(this.map);\r\n\r\n      // Optionally, show the coordinates in a popup\r\n      this.marker.bindPopup(`Coordinates: ${e.latlng.lat}, ${e.latlng.lng}`).openPopup();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n/* Override the default leaflet icon paths if necessary */\r\n.leaflet-container {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAKA,OAAOA,CAAA,MAAO,SAAS;AACvB,OAAO,0BAA0B;;AAEjC;AACA,OAAOC,SAAQ,MAAO,yBAAyB;AAE/C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAACJ,GAAE,GAAIJ,CAAC,CAACI,GAAG,CAAC,KAAK,CAAC,CAACM,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE;;MAE1D;MACAV,CAAC,CAACW,SAAS,CAAC,oDAAoD,EAAE;QAChEC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAACV,GAAG,CAAC;;MAElB;MACA,IAAI,CAACE,UAAS,GAAIN,CAAC,CAACe,IAAI,CAAC;QACvBC,OAAO,EAAEf,SAAS;QAAE;QACpBgB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACpBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACtBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzB,CAAC,CAAC;;MAEF;MACA,IAAI,CAACf,GAAG,CAACgB,EAAE,CAAC,OAAO,EAAE,IAAI,CAACC,SAAS,CAAC;IACtC,CAAC;IACDA,SAASA,CAACC,CAAC,EAAE;MACX;MACA,IAAI,IAAI,CAACjB,MAAM,EAAE;QACf,IAAI,CAACD,GAAG,CAACmB,WAAW,CAAC,IAAI,CAAClB,MAAM,CAAC;MACnC;;MAEA;MACA,IAAI,CAACA,MAAK,GAAIL,CAAC,CAACK,MAAM,CAAC,CAACiB,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,EAAE;QAAEX,IAAI,EAAE,IAAI,CAACT;MAAW,CAAC,CAAC,CAACQ,KAAK,CAAC,IAAI,CAACV,GAAG,CAAC;;MAE/F;MACA,IAAI,CAACC,MAAM,CAACsB,SAAS,CAAC,gBAAgBL,CAAC,CAACE,MAAM,CAACC,GAAG,KAAKH,CAAC,CAACE,MAAM,CAACE,GAAG,EAAE,CAAC,CAACE,SAAS,CAAC,CAAC;IACpF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}