{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-73811437\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"image-upload\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Image Upload\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Upload an image to your gallery:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Your Images\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"images\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.uploadImage && $options.uploadImage(...args)),\n    accept: \"image/png, image/jpeg\"\n  }, null, 32 /* NEED_HYDRATION */), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, image => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: image.name,\n      class: \"image-card\"\n    }, [_createElementVNode(\"img\", {\n      src: $data.cdnUrl + image.name\n    }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteImage(image.name)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","onChange","_cache","args","$options","uploadImage","accept","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","images","image","key","name","src","cdnUrl","_hoisted_6","onClick","$event","deleteImage","_hoisted_7"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div class=\"image-upload\">\r\n    <h1>Image Upload</h1>\r\n    <p>Upload an image to your gallery:</p>\r\n    <input type=\"file\" @change=\"uploadImage\" accept=\"image/png, image/jpeg\" />\r\n    <h3>Your Images</h3>\r\n    <div class=\"images\">\r\n      <div v-for=\"image in images\" :key=\"image.name\" class=\"image-card\">\r\n        <img :src=\"cdnUrl + image.name\" />\r\n        <button @click=\"deleteImage(image.name)\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { supabase } from '../supabaseclient';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      images: [],\r\n      cdnUrl: 'https://lfcvjlhlhbpvzhqodkny.supabase.co/storage/v1/object/public/images/',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getImages();\r\n  },\r\n  methods: {\r\n    async getImages() {\r\n      const { data, error } = await supabase.storage.from('images').list('', {\r\n        limit: 100,\r\n        offset: 0,\r\n        sortBy: { column: 'name', order: 'asc' },\r\n      });\r\n      if (data) {\r\n        this.images = data;\r\n      } else {\r\n        alert('Error loading images');\r\n        console.log(error);\r\n      }\r\n    },\r\n    async uploadImage(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const { data, error } = await supabase.storage\r\n        .from('images')\r\n        .upload(uuidv4() + '/' + file.name, file);\r\n\r\n      if (data) {\r\n        this.getImages();\r\n      } else {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async deleteImage(imageName) {\r\n      const { error } = await supabase.storage.from('images').remove([imageName]);\r\n      if (error) {\r\n        alert('Error deleting image');\r\n        console.log(error);\r\n      } else {\r\n        this.getImages();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image-upload {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.images {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n}\r\n.image-card {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n.image-card img {\r\n  max-width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAAqB,YAAjB,cAAY;gEAChBA,mBAAA,CAAuC,WAApC,kCAAgC;gEAEnCA,mBAAA,CAAoB,YAAhB,aAAW;;EACVD,KAAK,EAAC;AAAQ;mBANvB;mBAAA;;uBACEE,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAqB,EACrBC,UAAuC,EACvCJ,mBAAA,CAA0E;IAAnEK,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,MAAM,EAAC;qCAChDC,UAAoB,EACpBZ,mBAAA,CAKM,OALNa,UAKM,I,kBAJJZ,mBAAA,CAGMa,SAAA,QAVZC,WAAA,CAO2BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAjBjB,mBAAA,CAGM;MAHwBkB,GAAG,EAAED,KAAK,CAACE,IAAI;MAAErB,KAAK,EAAC;QACnDC,mBAAA,CAAkC;MAA5BqB,GAAG,EAAEL,KAAA,CAAAM,MAAM,GAAGJ,KAAK,CAACE;4BARlCG,UAAA,GASQvB,mBAAA,CAAwD;MAA/CwB,OAAK,EAAAC,MAAA,IAAEhB,QAAA,CAAAiB,WAAW,CAACR,KAAK,CAACE,IAAI;OAAG,QAAM,iBATvDO,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}