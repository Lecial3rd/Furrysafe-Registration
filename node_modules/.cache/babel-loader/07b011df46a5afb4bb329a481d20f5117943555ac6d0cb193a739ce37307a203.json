{"ast":null,"code":"import { supabase } from '../supabaseClient';\nexport default {\n  data() {\n    return {\n      file: null,\n      message: '',\n      messageType: ''\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadImage() {\n      if (!this.file) return;\n      const {\n        data,\n        error\n      } = await supabase.storage.from('images').upload(`public/${this.file.name}`, this.file);\n      if (error) {\n        this.message = 'Image upload failed: ' + error.message;\n        this.messageType = 'is-danger';\n      } else {\n        this.message = 'Image uploaded successfully!';\n        this.messageType = 'is-success';\n      }\n    }\n  }\n};","map":{"version":3,"names":["supabase","data","file","message","messageType","methods","handleFileUpload","event","target","files","uploadImage","error","storage","from","upload","name"],"sources":["C:\\Users\\Lenovo\\Downloads\\FurrySafe\\furrysafe_registration_testing-main\\front\\src\\views\\ImageUploadView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Upload Image</h1>\r\n    <form @submit.prevent=\"uploadImage\">\r\n      <div class=\"field\">\r\n        <label class=\"label\">Select Image</label>\r\n        <div class=\"control\">\r\n          <input class=\"input\" type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <div class=\"control\">\r\n          <button class=\"button is-primary\" type=\"submit\">Upload</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div v-if=\"message\" class=\"notification\" :class=\"messageType\">\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { supabase } from '../supabaseClient'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: null,\r\n      message: '',\r\n      messageType: ''\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    async uploadImage() {\r\n      if (!this.file) return;\r\n\r\n      const { data, error } = await supabase.storage\r\n        .from('images')\r\n        .upload(`public/${this.file.name}`, this.file);\r\n\r\n      if (error) {\r\n        this.message = 'Image upload failed: ' + error.message;\r\n        this.messageType = 'is-danger';\r\n      } else {\r\n        this.message = 'Image uploaded successfully!';\r\n        this.messageType = 'is-success';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notification {\r\n  margin-top: 1em;\r\n}\r\n.is-success {\r\n  background-color: #48c774;\r\n  color: white;\r\n}\r\n.is-danger {\r\n  background-color: #f14668;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"AAwBA,SAASA,QAAO,QAAS,mBAAkB;AAE3C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACL,IAAG,GAAIK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACR,IAAI,EAAE;MAEhB,MAAM;QAAED,IAAI;QAAEU;MAAM,IAAI,MAAMX,QAAQ,CAACY,OAAM,CAC1CC,IAAI,CAAC,QAAQ,EACbC,MAAM,CAAC,UAAU,IAAI,CAACZ,IAAI,CAACa,IAAI,EAAE,EAAE,IAAI,CAACb,IAAI,CAAC;MAEhD,IAAIS,KAAK,EAAE;QACT,IAAI,CAACR,OAAM,GAAI,uBAAsB,GAAIQ,KAAK,CAACR,OAAO;QACtD,IAAI,CAACC,WAAU,GAAI,WAAW;MAChC,OAAO;QACL,IAAI,CAACD,OAAM,GAAI,8BAA8B;QAC7C,IAAI,CAACC,WAAU,GAAI,YAAY;MACjC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}